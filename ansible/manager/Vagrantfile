# -*- mode: ruby -*-
# vi: set ft=ruby :

# Variables
var_non_rotational = 'on' # SSD

var_manager_box           = 'bento/oracle-7.6'
var_manager_vm_name        = 'ansible-manager'
var_manager_mem_size       = 1024
var_manager_cpus           = 1
var_manager_ip_address     = '192.168.56.100'

var_server1_box           = 'bento/oracle-7.6'
var_server1_vm_name        = 'ansible-server1'
var_server1_mem_size       = 1024
var_server1_cpus           = 1
var_server1_ip_address     = '192.168.56.101'

var_server2_box           = 'bento/oracle-7.6'
var_server2_vm_name        = 'ansible-server2'
var_server2_mem_size       = 1024
var_server2_cpus           = 1
var_server2_ip_address     = '192.168.56.102'

var_server3_box           = 'bento/oracle-7.6'
var_server3_vm_name        = 'ansible-server3'
var_server3_mem_size       = 1024
var_server3_cpus           = 1
var_server3_ip_address     = '192.168.56.103'


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define "manager" do |manager|
    manager.vm.box = var_manager_box
    manager.vm.network "private_network", ip: var_manager_ip_address
    
    manager.vm.provider "virtualbox" do |v|
      v.memory = var_manager_mem_size
      v.cpus   = var_manager_cpus
      v.name   = var_manager_vm_name
      v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--nonrotational', var_non_rotational]
    end
    
    manager.vm.provision "shell", inline: <<-SHELL
      sh /vagrant/scripts/setup.sh
    SHELL
  end

  config.vm.define "server1" do |server1|
    server1.vm.box = var_server1_box
    server1.vm.network "private_network", ip: var_server1_ip_address
    
    server1.vm.provider "virtualbox" do |v|
      v.memory = var_server1_mem_size
      v.cpus   = var_server1_cpus
      v.name   = var_server1_vm_name
      v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--nonrotational', var_non_rotational]
    end
    
    server1.vm.provision "shell", inline: <<-SHELL
      #
    SHELL
  end

  config.vm.define "server2" do |server2|
    server2.vm.box = var_server2_box
    server2.vm.network "private_network", ip: var_server2_ip_address
    
    server2.vm.provider "virtualbox" do |v|
      v.memory = var_server2_mem_size
      v.cpus   = var_server2_cpus
      v.name   = var_server2_vm_name
      v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--nonrotational', var_non_rotational]
    end
    
    server2.vm.provision "shell", inline: <<-SHELL
      #
    SHELL
  end

  config.vm.define "server3" do |server3|
    server3.vm.box = var_server3_box
    server3.vm.network "private_network", ip: var_server3_ip_address
    
    server3.vm.provider "virtualbox" do |v|
      v.memory = var_server3_mem_size
      v.cpus   = var_server3_cpus
      v.name   = var_server3_vm_name
      v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--nonrotational', var_non_rotational]
    end
    
    server3.vm.provision "shell", inline: <<-SHELL
      #
    SHELL
  end
end
